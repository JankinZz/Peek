# Safari AI 总结插件 - 产品需求文档(PRD) 

## 1. 文档信息

| 文档信息 | 描述 |
|---------|------|
| 文档名称 | Safari AI 总结插件产品需求文档 |
| 版本号   | v1.2.0 |
| 作者     | [jan] |
| 创建日期 | [2月25日] |
| 更新日期 | [2月27日] |
| 状态     | 修订版 |

## 2. 产品概述

### 2.1 产品背景

Safari用户在日常浏览过程中经常遇到信息过载的问题，尤其是面对长文章或视频内容时，难以快速获取核心信息。现有的浏览器扩展功能有限，不能充分利用AI技术为用户提供个性化的内容总结服务。我们需要开发一款智能的内容总结插件，帮助用户提升信息获取效率。

### 2.2 产品目标

开发一款基于Safari Userscripts的AI内容总结插件，能够智能分析网页文本和视频内容，并提供简洁明了的摘要。用户可以通过对话方式进一步探索内容细节，获得便捷的浏览体验。插件采用简洁设计原则，所有配置参数在代码中硬编码，确保用户专注于内容总结体验而非设置调整。

### 2.3 目标用户

- 信息工作者：经常需要阅读大量文章和资料的专业人士
- 学生和研究人员：需要快速总结学习资料的用户
- 普通网络用户：想要快速了解文章或视频核心内容的用户
- 自媒体工作者：需要快速了解行业内容的创作者

### 2.4 成功指标

- 总结准确率：生成摘要与原文核心内容的匹配度达到85%以上
- 用户参与度：用户平均每周使用插件至少5次
- 用户留存率：30天后的用户留存率达到40%以上
- 用户满意度：满意度评分达到4.5/5以上

## 3. 用户场景与功能概述

### 3.1 核心用户场景

**场景一：长文章总结**
用户浏览到一篇长文章，想要快速了解其主要内容和观点，点击总结按钮后获得精简准确的摘要。

**场景二：视频内容总结**
用户在视频网站(如YouTube、Bilibili)观看视频，希望无需完整观看即可了解主要内容，通过插件一键获取视频内容摘要。

**场景三：内容探索互动**
用户获得内容摘要后，希望进一步了解特定细节，通过对话方式询问AI助手并获得相关信息。

**场景四：快速掌握关键要点**
用户希望快速了解文章的核心要点和观点，通过"要点"标签页直接访问提炼过的关键信息和建议问题。

### 3.2 产品功能概述

1. **内容智能提取与总结**：自动分析网页或视频内容并生成摘要
2. **关键要点提取**：识别并展示内容中的核心要点和推荐问题
3. **交互式对话**：基于内容进行问答互动
4. **会话状态管理**：基于URL保存和恢复当前页面的信息
5. **多级摘要**：支持简短和详细两种摘要模式
6. **标签式内容组织**：通过标签页区分总结、要点和对话功能

## 4. 功能详细需求

### 4.1 内容提取与总结

#### 4.1.1 文本内容提取
- **描述**：从当前网页提取主要文本内容
- **详细要求**：
  - 使用启发式算法识别页面主要内容区域
  - 排除导航栏、广告、评论等非核心内容
  - 支持常见博客、新闻、学术网站等不同布局
  - 针对不同类型内容优化提取策略

#### 4.1.2 视频内容提取
- **描述**：从视频网站提取视频内容信息
- **详细要求**：
  - 支持YouTube、Bilibili、Vimeo等主流视频平台
  - 提取视频标题、描述、上传者、发布时间等元数据
  - **技术限制说明**: 
    - 由于浏览器扩展权限限制，无法直接获取完整字幕内容
    - YouTube字幕提取仅能获取当前显示的少量字幕片段
    - Bilibili字幕提取可能受限于网站结构变化
    - 当无法获取字幕时，应明确告知用户并基于可获取的视频元数据进行总结
  - 明确提示用户视频总结功能的局限性，避免过高期望

#### 4.1.3 内容总结
- **描述**：将提取的内容发送至AI服务获取摘要
- **详细要求**：
  - 固定生成约500字的简洁摘要
  - 支持生成更详细的扩展摘要(约1000字)
  - 保留原始文本的核心观点和逻辑结构
  - 提供"查看更详细摘要"选项
  - 总结格式必须包含：
    - 核心主题概述（1-2句）
    - 主要段落（3-5个）
    - 简短结论
  - 摘要长度在代码中硬编码设置，默认为500字

#### 4.1.4 关键要点提取
- **描述**：从内容中提取3-5个关键要点和推荐问题
- **详细要求**：
  - 每个要点包含标题和简短说明
  - 以卡片形式展示，支持展开/折叠
  - 根据内容生成3-5个相关问题建议
  - 点击问题可以直接切换到对话标签并发送问题
  - 在提取总结的同时并行提取要点，减少等待时间

### 4.2 交互式对话功能

#### 4.2.1 基于内容的问答
- **描述**：允许用户针对总结内容提问并获得回答
- **详细要求**：
  - 提供简洁明了的问题输入界面
  - AI回答基于原始内容和总结内容
  - 支持多轮对话，记录历史问答
  - 回答中明确标注推断性内容与原文直接提及的内容
  - 支持复制回答内容功能

#### 4.2.2 会话状态管理
- **描述**：保存当前页面的总结、要点和对话历史
- **详细要求**：
  - 基于当前URL创建会话标识
  - 一个会话绑定到特定的完整URL（包括路径和参数）
  - 监听URL变化（包括历史记录、锚点变化）自动重置会话
  - 保存原始内容以支持更详细摘要的生成
  - 关闭并重新打开对话框时恢复会话状态
  - 用户主动关闭对话框时清除会话状态
  - 使用`popstate`和`hashchange`事件监听URL变化
  - 使用`sessionStorage`基于URL创建唯一标识
  - 存储格式：`ai_summary_{URL哈希}_{类型}`

### 4.3 API配置与管理

#### 4.3.1 API基础配置
- **描述**：在代码中配置AI服务的基本参数
- **详细要求**：
  - 预设API接口地址在代码中硬编码
  - 内置API密钥在代码中硬编码
  - 固定使用特定模型，在代码中硬编码
  - 所有API配置保持硬编码，用户不可修改

#### 4.3.2 API参数预设
- **描述**：预设AI生成参数
- **详细要求**：
  - 温度值固定为0.6，保持输出稳定性
  - 最大令牌数设置为1000
  - **提示词优化**：
    - 总结提示词：明确指定格式和长度要求
    - 要点提示词：要求生成结构化JSON数据
    - 详细摘要提示词：指定更全面的内容覆盖
  - 这些参数在代码中硬编码，不提供用户修改界面

#### 4.3.3 错误处理机制
- **描述**：实现API调用的错误处理
- **详细要求**：
  - 实现基本的错误捕获和处理
  - 在控制台输出详细错误信息
  - 向用户展示友好的错误提示
  - 针对特定错误类型提供不同的用户提示：
    - API密钥无效: "API密钥无效，请在CONFIG.apiKey中填入正确的API密钥"
    - 上下文长度超限: "内容过长，超出模型处理限制"
    - 请求频率限制: "API调用频率超限，请稍后再试"
    - 网络连接失败: "网络连接失败，请检查您的网络并确保API端点可访问"
  - 实现简单的错误显示，但不包含自动重试机制

### 4.4 用户界面与体验

#### 4.4.1 总结按钮
- **描述**：浮动在页面右下角的总结触发按钮
- **详细要求**：
  - 设计为正方形按钮，确保Safari兼容性
  - 提供明确的视觉反馈(悬停、点击状态)
  - 固定位置不影响页面内容阅读
  - 按钮样式在代码中硬编码

#### 4.4.2 对话框界面
- **描述**：显示总结内容和交互功能的主要界面
- **详细要求**：
  - **基础结构**：
    - 清晰的分区：标题栏、标签栏、内容区、底部操作区
    - 支持最小化/关闭/恢复操作
    - 固定位置于页面右侧
  
  - **尺寸与位置**：
    - 高度：固定为视窗高度的1/6（约16.7%）
    - 宽度：固定380px，小屏设备适配为屏幕宽度的85%
    - 最小尺寸：高度不小于180px，宽度不小于320px
    - 位置：默认固定在页面右侧，底部对齐

  - **标签页设计**：
    - 位置：对话框顶部，标题栏下方
    - 高度：38px
    - 组成：三个等宽标签 - "总结"、"要点"、"对话"
    - 默认：默认选中"总结"标签

  - **内容显示**：
    - 内容区必须强制实现自动换行，确保文本不会溢出视区边界
    - 实现垂直滚动机制，当内容超出可视区域时自动显示滚动条
    - 严格禁止水平滚动，确保所有文本内容都能在当前视区宽度内完整显示
    - 滚动条必须可见且易于操作，样式应与Safari原生滚动条一致
    - 文本区域应正确应用overflow属性，确保滚动机制在各种内容长度下均正常工作
    - 所有滚动区域应实现平滑滚动效果

  - **响应式设计**：
    - 对话框宽度应根据屏幕尺寸自动调整（最小320px，小屏幕为85vw）
    - 在小屏设备上自动调整位置和大小

  - **视觉反馈**：
    - 所有交互元素（按钮、输入框）提供明确的悬停和点击状态
    - 加载过程显示动画反馈，区分不同类型的加载状态
    - 错误信息应有醒目的视觉提示和清晰的恢复建议

  - **无障碍支持**：
    - 完整支持键盘导航（Tab键切换元素，Enter提交，Esc关闭）
    - 适当的对比度确保文本在不同背景下清晰可读
    - 所有交互元素添加适当的aria属性，支持屏幕阅读器

#### 4.4.3 界面样式预设
- **描述**：预设界面显示样式和文字规范
- **详细要求**：
  - **字体设置**：
    - 系统字体栈：优先使用系统默认字体，优化中文显示
    - 大小层级：
      - 标题栏：16px
      - 标签名：14px
      - 正文内容：14px
      - 辅助文字：12px
    - 字重层级：
      - 标题/重点：500-600
      - 正文：400
      - 按钮：500
  
  - **文本布局**：
    - 行高：正文为1.5倍行高，确保可读性
    - 段间距：段落间12-16px间距
    - 对齐：内容左对齐，按钮文本居中
    - 溢出处理：
      - 强制自动换行（word-wrap: break-word）
      - 禁止水平溢出（overflow-x: hidden）
      - 长标题使用省略号
  
  - **统一的界面样式**：
    - 主色调：#4285f4（Google蓝）
    - 背景色：#ffffff（白色）
    - 文本色：#333333（深灰）
    - 边框半径：8px（大元素），4px（小元素）
    - 阴影效果：轻微阴影提升层次感
  
  - **所有样式设置均在代码中硬编码，不提供用户自定义选项**

#### 4.4.4 富文本支持
- **描述**：支持多种文本格式化元素
- **详细要求**：
  - **基础格式**：
    - 粗体、斜体、下划线、高亮
    - 文本转换支持Markdown风格语法
  
  - **结构元素**：
    - 标题（H3级别）
    - 列表（项目符号、编号）
    - 引用块、代码块、分隔线
  
  - **特殊元素**：
    - 链接自动识别并转为可点击状态
    - 代码使用等宽字体和背景色区分
    - 引用使用左侧边框标识
  
  - **格式化实现**：
    - 使用正则表达式识别Markdown语法
    - 转换为HTML标签呈现
    - 确保转换过程中不破坏原有结构

#### 4.4.5 内容标签页规范

##### 4.4.5.1 "总结"标签页
- **内容**：原始网页/视频的核心总结
- **限制**：严格控制在500字以内
- **结构**：
  - 核心概括（1-2句）
  - 分段主题内容（按类型组织）
  - 简短结论
- **操作**：提供详细/简短摘要切换选项和滚动到顶部按钮

##### 4.4.5.2 "要点"标签页
- **内容**：提取的关键要点和推荐问题
- **结构**：
  - 3-5个核心要点（可展开卡片）
  - 3-5个推荐问题按钮
- **交互**：点击要点卡片展开详细内容，点击推荐问题自动切换到对话标签并发送

##### 4.4.5.3 "对话"标签页
- **内容**：用户与AI的问答历史
- **组件**：
  - 对话历史区域（气泡式布局）
  - 问题输入框（底部固定）
  - 发送按钮
- **功能**：支持复制回答内容，自动滚动到最新消息

## 5. 非功能需求

### 5.1 性能要求
- 按钮和界面响应时间不超过300ms
- 内容提取过程不超过2秒
- AI生成摘要的等待时间提供明确的加载状态
- 内存占用不影响浏览器整体性能
- 并行获取总结和要点数据，减少等待时间

### 5.2 兼容性要求
- 支持Safari Version 4.5.4 (109)及更高版本
- 兼容macOS和iOS上的Safari浏览器
- 适配不同屏幕尺寸和分辨率
- 支持深色模式(可选功能)
- **确保在所有Safari版本中文本显示和滚动机制正常工作**

### 5.3 安全要求
- API密钥仅在代码中存储，不传输至第三方服务
- 不收集或上传用户个人信息
- 明确告知用户数据处理方式和隐私政策
- 仅请求必要的页面权限

### 5.4 可访问性要求
- 支持基本键盘操作：
  - 使用Enter键提交问题
  - 使用Esc键关闭对话框
  - 使用Tab键在界面元素间导航
- 提供适当的颜色对比度
- 兼容屏幕阅读器(可选功能)
- 遵循WCAG 2.1 AA级标准(可选)
- **确保文本内容可通过键盘滚动浏览**

## 6. 技术规格

### 6.1 开发技术
- 使用JavaScript开发，基于Userscripts Safari
- 使用纯原生JS实现，不依赖外部库
- 采用模块化设计模式
- 所有样式使用CSS实现，确保与网页样式隔离
- **确保CSS样式应用正确的继承关系，避免样式被宿主页面覆盖**

### 6.2 数据存储
- 使用sessionStorage基于URL哈希存储临时会话数据
- 分类型存储数据（总结、要点、对话、原始内容）
- 实现会话生命周期管理，URL变化时自动重置
- 实现数据验证和错误恢复机制
- 配置参数统一存储在代码常量CONFIG对象中，修改配置需通过代码更新

### 6.3 API集成
- 支持OpenAI API及兼容接口
- 接口参数在代码中硬编码配置
- 实现错误处理和友好提示
- 支持API请求和响应日志(可选调试功能)
- 为不同功能设计专门的提示词模板

### 6.4 代码质量要求
- 编写清晰的代码注释
- 遵循ESLint规则
- 实现全面的错误处理
- 代码模块化便于维护
- **确保CSS选择器具有足够的特异性，防止样式冲突**

## 7. 用户界面设计

### 7.1 总结按钮
- 位置：浏览器右下角
- 尺寸：50px × 50px
- 形状：正方形，圆角8px
- 颜色：主色#4285f4，悬停色#5c9cff
- 图标：简洁的摘要图标

### 7.2 对话框
- **基础尺寸**：
  - 默认宽度：380px（在大屏上）
  - 最小宽度：320px
  - 宽度限制：小屏幕为85vw
  - 默认高度：16.7vh（视窗高度的1/6）
  - 最小高度：180px
  - 位置：固定在页面右侧底部

- **布局结构**：
  - 标题栏高度：38px，含标题文本、控制按钮
  - 标签栏高度：38px，包含三个标签
  - 内容区：根据当前标签显示不同内容
  - 输入区（对话标签页）：固定高度，56px

- **标签页内容**：
  - "总结"标签：显示内容摘要和操作按钮
  - "要点"标签：显示关键要点卡片和推荐问题
  - "对话"标签：显示对话历史和输入框

- **视觉设计**：
  - 主色调：#4285f4（Google蓝）
  - 背景色：白色（#ffffff）
  - 文本主色：深灰（#333333）
  - 强调文本：使用粗体（font-weight: 600）
  - 卡片设计：轻微阴影和圆角
  - 对话气泡设计：用户问题和AI回答使用不同颜色区分

## 8. 实施计划与优先级

### 8.1 开发阶段

**阶段一：基础架构优化 (高优先级)**
- **实现基于URL的会话存储机制**（最高优先级）
- **实现标签页界面结构**（最高优先级）
- 修复文本显示和滚动问题
- 实现富文本格式化支持

**阶段二：功能增强 (中优先级)**
- 实现关键要点提取和展示
- 实现推荐问题功能
- 优化总结提示词模板
- 实现并行数据获取
- 交互式对话功能优化

**阶段三：用户体验优化 (低优先级)**
- 完善键盘导航和无障碍支持
- 优化响应式适配
- 复制功能增强
- 加载状态反馈优化

### 8.2 功能优先级

**P0 (必须实现)**
- 基于URL的会话管理
- 三标签页布局结构
- 固定尺寸和位置的对话框
- 文本自动换行和滚动功能修复
- 关键要点提取功能

**P1 (应该实现)**
- 富文本支持
- 推荐问题功能
- 并行数据获取
- 复制功能

**P2 (可以实现)**
- 详细与简短摘要切换优化
- 标签切换动画
- 加载状态优化
- 响应式设计增强

**P3 (未来考虑)**
- 多语言支持
- 深色模式
- 高级分享功能
- 统计和分析功能

## 9. 验收标准

### 9.1 功能验收标准
- 能成功提取并总结不少于10种常见网站的内容
- 支持至少3个主流视频平台的内容总结
- 会话状态在同一URL页面内正确保存和恢复
- URL变化时自动重置会话状态
- 三标签页功能（总结、要点、对话）正常工作
- 关键要点和推荐问题功能正常工作

### 9.2 性能验收标准
- 页面加载后插件按钮显示时间不超过500ms
- 内容提取时间不超过3秒
- UI操作响应时间不超过300ms
- 内存占用增加不超过50MB
- 对话框切换和滚动无明显卡顿

### 9.3 UI/UX验收标准
- **对话框固定尺寸为视窗高度的1/6**
- **标签页结构完整，可正常切换**
- **关键要点卡片能够正常展开/折叠**
- **推荐问题点击后能正确切换到对话标签**
- **对话框文本必须完全自动换行，严禁出现水平滚动条**
- **任何长度的文本内容在对话框中都必须完整显示，无截断或溢出**
- **当内容超出视区高度时，垂直滚动条必须自动出现且可正常操作**
- **在不同宽度的Safari窗口中，对话框内的文本必须保持良好的换行和布局**
- 所有按钮和交互元素有清晰的视觉反馈
- 在常见屏幕尺寸和分辨率下布局合理
- **富文本格式正确显示（粗体、列表、链接等）**

### 9.4 兼容性验收标准
- 在Safari 4.5.4及更高版本正常工作
- 在macOS和iOS上功能一致
- 在不同网页环境中插件样式不受影响
- **确保文本显示和滚动功能在所有支持版本的Safari中正常工作**

## 10. 附录

### 10.1 术语表
- **Userscripts**: Safari的用户脚本功能，允许用户自定义脚本增强浏览体验
- **API**: 应用程序接口，本插件主要指AI服务提供的接口
- **令牌(Token)**: AI模型处理文本的基本单位，通常一个单词约为1.3个令牌
- **温度值**: 控制AI生成内容多样性的参数，较低值生成更确定性内容
- **sessionStorage**: 会话存储，数据在会话结束后清除
- **自动换行(Word Wrap)**: 确保文本在达到容器边界时自动换行显示的特性
- **溢出处理(Overflow)**: 控制内容超出容器时的显示行为，如滚动、隐藏等
- **URL哈希**: 基于URL生成的唯一标识符，用于区分不同页面的会话
- **标签页(Tab)**: 用户界面设计模式，通过不同标签切换不同内容视图
- **关键要点(Keypoints)**: 从内容中提取的核心观点或重要信息

### 10.2 参考资源
- Safari Userscripts 文档
- OpenAI API 文档
- 主流视频平台API文档
- Web内容提取最佳实践
- Safari CSS兼容性文档
